version: "3"
services:
  corgibot:
      image: docker.pkg.github.com/corgibot/corgi/corgibot:master
      restart: always
      network_mode: "host"
      user: root
      container_name: corgibot
      volumes:
        - /srv/corgibot/config.json:/srv/config.json
        - /srv/corgibot/logs:/srv/logs
        - /srv/corgibot/langs:/srv/langs
        - /srv/corgibot/resources:/srv/resources
      stop_grace_period: 7200s
      entrypoint:
        - java
        - -jar
        - -Xmx1g
        - -XX:+UseG1GC
        - -XX:+ParallelRefProcEnabled
        - -XX:+UseStringDeduplication
        - corgibot.jar

  prometheus:
      image: prom/prometheus:v2.5.0
      container_name: prometheus
      volumes:
        - ./prometheus.yml:/etc/prometheus/prometheus.yml
        - prometheus_data:/prometheus
      restart: unless-stopped
      command:
        - '--config.file=/etc/prometheus/prometheus.yml'
        - '--storage.tsdb.path=/prometheus'
        - '--web.console.libraries=/etc/prometheus/console_libraries'
        - '--web.console.templates=/etc/prometheus/consoles'
        - '--storage.tsdb.retention=120d'
        - '--web.enable-lifecycle'
      ports:
        - 9090:9090
      depends_on:
        - cadvisor
        - node-exporter
#        - bot
      labels:
        org.label-schema.group: "monitoring"

  node-exporter:
      container_name: node-exporter
      image: prom/node-exporter:v0.16.0
      volumes:
        - /proc:/host/proc:ro
        - /sys:/host/sys:ro
        - /:/rootfs:ro
      command:
        - '--path.procfs=/host/proc'
        - '--path.sysfs=/host/sys'
        - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
      ports:
        - 9100:9100
      labels:
        org.label-schema.group: "monitoring"

  cadvisor:
      image: google/cadvisor:latest
      container_name: cadvisor
      volumes:
        - /:/rootfs:ro
        - /var/run:/var/run:rw
        - /sys:/sys:ro
        - /var/lib/docker/:/var/lib/docker:ro
      restart: unless-stopped
      ports:
        - 8080:8080
      labels:
        org.label-schema.group: "monitoring"

  grafana:
      image: grafana/grafana
      container_name: grafana
      volumes:
        - grafana_data:/var/lib/grafana
      env_file:
        - grafana.config
      restart: unless-stopped
      ports:
        - 3000:3000
      depends_on:
        - prometheus
      labels:
        org.label-schema.group: "monitoring"

volumes:
    prometheus_data:
    grafana_data:
